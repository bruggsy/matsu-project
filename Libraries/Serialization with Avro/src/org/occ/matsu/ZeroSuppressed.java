package org.occ.matsu;

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
public class ZeroSuppressed extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ZeroSuppressed\",\"fields\":[{\"name\":\"index\",\"type\":\"long\"},{\"name\":\"strip\",\"type\":\"bytes\"}]}");
  @Deprecated public long index;
  @Deprecated public java.nio.ByteBuffer strip;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return index;
    case 1: return strip;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: index = (java.lang.Long)value$; break;
    case 1: strip = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'index' field.
   */
  public java.lang.Long getIndex() {
    return index;
  }

  /**
   * Sets the value of the 'index' field.
   * @param value the value to set.
   */
  public void setIndex(java.lang.Long value) {
    this.index = value;
  }

  /**
   * Gets the value of the 'strip' field.
   */
  public java.nio.ByteBuffer getStrip() {
    return strip;
  }

  /**
   * Sets the value of the 'strip' field.
   * @param value the value to set.
   */
  public void setStrip(java.nio.ByteBuffer value) {
    this.strip = value;
  }

  /** Creates a new ZeroSuppressed RecordBuilder */
  public static ZeroSuppressed.Builder newBuilder() {
    return new ZeroSuppressed.Builder();
  }
  
  /** Creates a new ZeroSuppressed RecordBuilder by copying an existing Builder */
  public static ZeroSuppressed.Builder newBuilder(ZeroSuppressed.Builder other) {
    return new ZeroSuppressed.Builder(other);
  }
  
  /** Creates a new ZeroSuppressed RecordBuilder by copying an existing ZeroSuppressed instance */
  public static ZeroSuppressed.Builder newBuilder(ZeroSuppressed other) {
    return new ZeroSuppressed.Builder(other);
  }
  
  /**
   * RecordBuilder for ZeroSuppressed instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ZeroSuppressed>
    implements org.apache.avro.data.RecordBuilder<ZeroSuppressed> {

    private long index;
    private java.nio.ByteBuffer strip;

    /** Creates a new Builder */
    private Builder() {
      super(ZeroSuppressed.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(ZeroSuppressed.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing ZeroSuppressed instance */
    private Builder(ZeroSuppressed other) {
            super(ZeroSuppressed.SCHEMA$);
      if (isValidValue(fields()[0], other.index)) {
        this.index = (java.lang.Long) data().deepCopy(fields()[0].schema(), other.index);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.strip)) {
        this.strip = (java.nio.ByteBuffer) data().deepCopy(fields()[1].schema(), other.strip);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'index' field */
    public java.lang.Long getIndex() {
      return index;
    }
    
    /** Sets the value of the 'index' field */
    public ZeroSuppressed.Builder setIndex(long value) {
      validate(fields()[0], value);
      this.index = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'index' field has been set */
    public boolean hasIndex() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'index' field */
    public ZeroSuppressed.Builder clearIndex() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'strip' field */
    public java.nio.ByteBuffer getStrip() {
      return strip;
    }
    
    /** Sets the value of the 'strip' field */
    public ZeroSuppressed.Builder setStrip(java.nio.ByteBuffer value) {
      validate(fields()[1], value);
      this.strip = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'strip' field has been set */
    public boolean hasStrip() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'strip' field */
    public ZeroSuppressed.Builder clearStrip() {
      strip = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ZeroSuppressed build() {
      try {
        ZeroSuppressed record = new ZeroSuppressed();
        record.index = fieldSetFlags()[0] ? this.index : (java.lang.Long) defaultValue(fields()[0]);
        record.strip = fieldSetFlags()[1] ? this.strip : (java.nio.ByteBuffer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
